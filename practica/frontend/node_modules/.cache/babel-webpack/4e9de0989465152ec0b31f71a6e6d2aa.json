{"ast":null,"code":"import _asyncToGenerator from \"C:/xampp/htdocs/4sangular/proyectos/ProyectoAngular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/historial.service\";\nimport * as i2 from \"@angular/material/table\";\n\nfunction HistorialComponent_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 8);\n    i0.ɵɵtext(1, \" Fecha de registro \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HistorialComponent_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r8.fecha_de_registro, \" \");\n  }\n}\n\nfunction HistorialComponent_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 8);\n    i0.ɵɵtext(1, \" Tarea \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HistorialComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r9.tarea, \" \");\n  }\n}\n\nfunction HistorialComponent_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 8);\n    i0.ɵɵtext(1, \" Descripcion \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HistorialComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 9);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r10 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(element_r10.descripcion);\n  }\n}\n\nfunction HistorialComponent_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 10);\n  }\n}\n\nfunction HistorialComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 11);\n  }\n}\n\nexport class HistorialComponent {\n  constructor(_historialService) {\n    var _this = this;\n\n    this._historialService = _historialService;\n    this.displayedColumns = ['fecha_de_registro', 'tarea', 'descripcion'];\n    this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n    this.listarHistorial = /*#__PURE__*/_asyncToGenerator(function* () {\n      try {\n        const response = yield _this._historialService.listarHistorial().toPromise();\n        console.log(response);\n      } catch (error) {}\n    });\n  }\n\n  validarLogin() {\n    let sesion = localStorage.getItem(\"sesion\");\n\n    if (sesion === null) {\n      this.router.navigate([\"/login\"]);\n    } else {\n      this.router.navigate([\"/tareas\"]);\n    }\n\n    console.log(sesion);\n  }\n\n  ngOnInit() {\n    this.getAllReports();\n    this.validarLogin();\n  }\n\n  getAllReports() {\n    let resp = this._historialService.listarHistorial();\n\n    resp.subscribe(report => this.dataSource.data = report);\n  }\n\n}\n\nHistorialComponent.ɵfac = function HistorialComponent_Factory(t) {\n  return new (t || HistorialComponent)(i0.ɵɵdirectiveInject(i1.HistorialService));\n};\n\nHistorialComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HistorialComponent,\n  selectors: [[\"app-historial\"]],\n  decls: 12,\n  vars: 3,\n  consts: [[\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"fecha_de_registro\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"tarea\"], [\"matColumnDef\", \"descripcion\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function HistorialComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\", 0);\n      i0.ɵɵelementContainerStart(1, 1);\n      i0.ɵɵtemplate(2, HistorialComponent_th_2_Template, 2, 0, \"th\", 2);\n      i0.ɵɵtemplate(3, HistorialComponent_td_3_Template, 2, 1, \"td\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(4, 4);\n      i0.ɵɵtemplate(5, HistorialComponent_th_5_Template, 2, 0, \"th\", 2);\n      i0.ɵɵtemplate(6, HistorialComponent_td_6_Template, 2, 1, \"td\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(7, 5);\n      i0.ɵɵtemplate(8, HistorialComponent_th_8_Template, 2, 0, \"th\", 2);\n      i0.ɵɵtemplate(9, HistorialComponent_td_9_Template, 3, 1, \"td\", 3);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(10, HistorialComponent_tr_10_Template, 1, 0, \"tr\", 6);\n      i0.ɵɵtemplate(11, HistorialComponent_tr_11_Template, 1, 0, \"tr\", 7);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n    }\n  },\n  directives: [i2.MatTable, i2.MatColumnDef, i2.MatHeaderCellDef, i2.MatCellDef, i2.MatHeaderRowDef, i2.MatRowDef, i2.MatHeaderCell, i2.MatCell, i2.MatHeaderRow, i2.MatRow],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJoaXN0b3JpYWwuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["C:\\xampp\\htdocs\\4sangular\\proyectos\\ProyectoAngular\\src\\app\\components\\historial\\historial.component.ts","C:\\xampp\\htdocs\\4sangular\\proyectos\\ProyectoAngular\\src\\app\\components\\historial\\historial.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { HistorialService } from 'src/app/services/historial.service';\nimport { HistorialReports } from 'src/environments/environment';\n\nexport interface PeriodicElement {\n  fecha_de_registro: Date;\n  tarea: string;\n  descripcion: string;\n}\n\n@Component({\n  selector: 'app-historial',\n  templateUrl: './historial.component.html',\n  styleUrls: ['./historial.component.css']\n})\nexport class HistorialComponent implements OnInit {\n\n  ELEMENT_DATA!: HistorialReports[];\n\n  displayedColumns: string[] = ['fecha_de_registro', 'tarea', 'descripcion'];\n  dataSource = new MatTableDataSource<HistorialReports>(this.ELEMENT_DATA);\n\n\n  constructor(private _historialService: HistorialService) { }\n\n  validarLogin() {\n    let sesion = localStorage.getItem(\"sesion\")\n    if (sesion === null) {\n      this.router.navigate([\"/login\"])\n    } else {\n      this.router.navigate([\"/tareas\"])\n    }\n    console.log(sesion)\n  }\n  \n  ngOnInit(): void {\n    this.getAllReports();\n    this.validarLogin();\n  }\n\n  public getAllReports() {\n    let resp = this._historialService.listarHistorial();\n    resp.subscribe(report => this.dataSource.data = report as HistorialReports[])\n  }\n\n  listarHistorial = async () => {\n    try {\n    const response = await this._historialService.listarHistorial().toPromise()\n    console.log(response);    \n\n    } catch (error) {\n\n    }\n  }\n\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Usuario Column -->\n    <ng-container matColumnDef=\"fecha_de_registro\">\n        <th mat-header-cell *matHeaderCellDef> Fecha de registro </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.fecha_de_registro}} </td>\n    </ng-container>\n\n    <!-- nombre Column -->\n    <ng-container matColumnDef=\"tarea\">\n        <th mat-header-cell *matHeaderCellDef> Tarea </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.tarea}} </td>\n    </ng-container>\n\n    <!-- estado Column -->\n    <ng-container matColumnDef=\"descripcion\">\n        <th mat-header-cell *matHeaderCellDef> Descripcion </th>\n        <td mat-cell *matCellDef=\"let element\"><p>{{element.descripcion}}</p> </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    \n</table>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}